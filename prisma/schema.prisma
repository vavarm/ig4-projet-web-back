// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EnumTailleTShirt {
  XS
  S
  M
  L
  XL
  XXL
}

enum EnumHebergement {
  PROPOSE
  RECHERCHE
  AUCUN
}

enum EnumRole {
  Admin
  Observateur
  Benevole
}

model Benevole {
  id                  Int                   @id @default(autoincrement())
  nom                 String
  prenom              String
  email               String                @unique
  password            String
  adressePostale      String
  codePostal          String
  ville               String
  telephone           String
  associations        Association[]
  taille_tshirt       EnumTailleTShirt
  vegetarien          Boolean
  hebergement         EnumHebergement
  role                EnumRole
  compteValide        Boolean               @default(false)
  posteReference      Poste?                @relation(fields: [posteReferenceId], references: [id])
  posteReferenceId    Int?
  planningsEspaces    PlanningEspace[]
  InscriptionFestival InscriptionFestival[]
}

model Association {
  id        Int        @id @default(autoincrement())
  nom       String     @unique
  benevoles Benevole[]
  email     String     @unique
}

model Poste {
  id           Int        @id @default(autoincrement())
  nom          String
  referents    Benevole[]
  messages     Message[]
  espaces      Espace[]
  festival     Festival   @relation(fields: [festivalYear], references: [year])
  festivalYear Int

  @@unique([nom, festivalYear])
}

model Jeu {
  idJeu       Int         @id
  nom         String
  auteur      String
  editeur     String
  nbJoueurs   String
  ageMin      String
  duree       String
  type        String
  notice      String
  mecanismes  String
  themes      String
  tags        String
  description String
  image       String
  logo        String
  video       String
  EspacesJeux EspaceJeu[]
}

model EspaceJeu {
  id       Int    @id @default(autoincrement())
  jeu      Jeu    @relation(fields: [jeuId], references: [idJeu])
  jeuId    Int
  espace   Espace @relation(fields: [espaceId], references: [id])
  espaceId Int
  aAnimer  String
  recu     String

  @@unique([jeuId, espaceId])
}

model Espace {
  id               Int              @id @default(autoincrement())
  nom              String
  nbPlacesMax      Int
  poste            Poste            @relation(fields: [posteId], references: [id])
  posteId          Int
  planningsEspaces PlanningEspace[]
  EspacesJeux      EspaceJeu[]

  @@unique([nom, posteId])
}

model Message {
  id              Int      @id @default(autoincrement())
  poste           Poste    @relation(fields: [posteId], references: [id])
  posteId         Int
  message         String
  datePublication DateTime @default(now())
}

model Jour {
  id              Int              @id @default(autoincrement())
  label           String
  numeroJour      Int              @default(1)
  creneauxHoraire CreneauHoraire[]
  festival        Festival         @relation(fields: [festivalYear], references: [year])
  festivalYear    Int

  @@unique([label, festivalYear])
  @@unique([numeroJour, festivalYear])
}

model CreneauHoraire {
  id                  Int              @id @default(autoincrement())
  horaireDebutHeures  Int
  horaireDebutMinutes Int
  horaireFinHeures    Int
  horaireFinMinutes   Int
  jour                Jour             @relation(fields: [jourId], references: [id])
  jourId              Int
  planningsEspaces    PlanningEspace[]
}

model PlanningEspace {
  id               Int            @id @default(autoincrement())
  espace           Espace         @relation(fields: [espaceId], references: [id])
  espaceId         Int
  benevole         Benevole       @relation(fields: [benevoleId], references: [id])
  benevoleId       Int
  creneauHoraire   CreneauHoraire @relation(fields: [creneauHoraireId], references: [id])
  creneauHoraireId Int
  flexible         Boolean
}

model Festival {
  year                Int                   @id
  inscriptionFestival InscriptionFestival[]
  postes              Poste[]
  jours               Jour[]
}

model InscriptionFestival {
  benevole     Benevole @relation(fields: [benevoleId], references: [id])
  benevoleId   Int
  festival     Festival @relation(fields: [festivalYear], references: [year])
  festivalYear Int
  present      Boolean  @default(false)

  @@id([benevoleId, festivalYear])
}
