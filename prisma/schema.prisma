// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EnumTailleTShirt {
  XS
  S
  M
  L
  XL
  XXL
}

enum EnumHebergement {
  PROPOSE
  RECHERCHE
  AUCUN
}

enum EnumRole {
  Admin
  Observateur
  Benevole
}

model Benevole {
  id                  Int                   @id @default(autoincrement())
  nom                 String
  prenom              String
  email               String                @unique
  password            String
  adressePostale      String
  codePostal          String
  ville               String
  telephone           String
  associations        Association[]
  taille_tshirt       EnumTailleTShirt
  vegetarien          Boolean
  hebergement         EnumHebergement
  role                EnumRole
  compteValide        Boolean               @default(false)
  posteReference      Poste?                @relation(fields: [posteReferenceId], references: [id])
  posteReferenceId    Int?
  planningsEspaces    PlanningEspace[]
  InscriptionFestival InscriptionFestival[]
}

model Association {
  id        Int        @id @default(autoincrement())
  nom       String     @unique
  benevoles Benevole[]
  email     String     @unique
}

model Poste {
  id           Int        @id @default(autoincrement())
  nom          String
  referents    Benevole[]
  messages     Message[]
  espaces      Espace[]
  festival     Festival   @relation(fields: [festivalYear], references: [year])
  festivalYear Int

  @@unique([nom, festivalYear])
}

model Jeu {
  id          Int      @id @default(autoincrement())
  titre       String
  editeur     String
  nbJoueurs   String
  recu        Boolean
  lienSiteWeb String
  espaces     Espace[]
}

model Espace {
  id               Int              @id @default(autoincrement())
  nom              String
  jeux             Jeu[]
  nbPlaces         Int
  poste            Poste            @relation(fields: [posteId], references: [id])
  posteId          Int
  planningsEspaces PlanningEspace[]
}

model Message {
  id              Int      @id @default(autoincrement())
  poste           Poste    @relation(fields: [posteId], references: [id])
  posteId         Int
  message         String
  datePublication DateTime @default(now())
}

model Jour {
  id               Int              @id @default(autoincrement())
  label            String           @unique
  creneauxHoraires CreneauHoraire[]
}

model CreneauHoraire {
  id                  Int              @id @default(autoincrement())
  horaireDebutHeures  Int
  horaireDebutMinutes Int
  horaireFinHeures    Int
  horaireFinMinutes   Int
  jour                Jour             @relation(fields: [jourId], references: [id])
  jourId              Int
  planningsEspaces    PlanningEspace[]
}

model PlanningEspace {
  id               Int            @id @default(autoincrement())
  espace           Espace         @relation(fields: [espaceId], references: [id])
  espaceId         Int
  benevole         Benevole       @relation(fields: [benevoleId], references: [id])
  benevoleId       Int
  creneauHoraire   CreneauHoraire @relation(fields: [creneauHoraireId], references: [id])
  creneauHoraireId Int
  flexible         Boolean
}

model Festival {
  year                Int                   @id
  InscriptionFestival InscriptionFestival[]
  Poste               Poste[]
}

model InscriptionFestival {
  benevole     Benevole @relation(fields: [benevoleId], references: [id])
  benevoleId   Int
  festival     Festival @relation(fields: [festivalYear], references: [year])
  festivalYear Int
  present      Boolean  @default(false)

  @@id([benevoleId, festivalYear])
}
